/*
 * lookup.h
 *
 *  Created on: Sep 13, 2017
 *      Author: alxhoff
 */

#ifndef LOOKUP_H_
#define LOOKUP_H_

#define SC(key) HID_KEYBOARD_SC_##key
#define MOD(key) HID_KEYBOARD_MODIFIER_##key

#include "HIDClassCommon.h"

struct allDaScanCodes
{
	uint8_t scanCode;
	uint8_t modifier;
};

struct allDaScanCodes allDaKeys[127] = {
	[33]={SC(1_AND_EXCLAMATION),MOD(RIGHTSHIFT)},
	[34]={SC(APOSTROPHE_AND_QUOTE),MOD(RIGHTSHIFT)},
	[35]={SC(3_AND_HASHMARK),MOD(RIGHTSHIFT)},
	[36]={SC(4_AND_DOLLAR),MOD(RIGHTSHIFT)},
	[37]={SC(5_AND_PERCENTAGE),MOD(RIGHTSHIFT)},
	[38]={SC(7_AND_AMPERSAND),MOD(RIGHTSHIFT)},
	[39]={SC(APOSTROPHE_AND_QUOTE),0},
	[40]={SC(9_AND_OPENING_PARENTHESIS),MOD(RIGHTSHIFT)},
	[41]={SC(0_AND_CLOSING_PARENTHESIS),MOD(RIGHTSHIFT)},
	[42]={SC(8_AND_ASTERISK),MOD(RIGHTSHIFT)},
	[43]={SC(EQUAL_AND_PLUS),MOD(RIGHTSHIFT)},
	[44]={SC(COMMA_AND_LESS_THAN_SIGN),0},
	[45]={SC(MINUS_AND_UNDERSCORE),0},
	[46]={SC(DOT_AND_GREATER_THAN_SIGN),0},
	[47]={SC(SLASH_AND_QUESTION_MARK),0},
	[48]={SC(0_AND_CLOSING_PARENTHESIS),0},
	[49]={SC(1_AND_EXCLAMATION),0},
	[50]={SC(2_AND_AT),0},
	[51]={SC(3_AND_HASHMARK),0},
	[52]={SC(4_AND_DOLLAR),0},
	[53]={SC(5_AND_PERCENTAGE),0},
	[54]={SC(6_AND_CARET),0},
	[55]={SC(7_AND_AMPERSAND),0},
	[56]={SC(8_AND_ASTERISK),0},
	[57]={SC(9_AND_OPENING_PARENTHESIS),0},
	[58]={SC(SEMICOLON_AND_COLON),MOD(RIGHTSHIFT)},
	[59]={SC(SEMICOLON_AND_COLON),0},
	[60]={SC(COMMA_AND_LESS_THAN_SIGN),MOD(RIGHTSHIFT)},
	[61]={SC(EQUAL_AND_PLUS),0},
	[62]={SC(DOT_AND_GREATER_THAN_SIGN),MOD(RIGHTSHIFT)},
	[63]={SC(SLASH_AND_QUESTION_MARK),MOD(RIGHTSHIFT)},
	[65]={SC(A),MOD(RIGHTSHIFT)},
	[66]={SC(B),MOD(RIGHTSHIFT)},
	[67]={SC(C),MOD(RIGHTSHIFT)},
	[68]={SC(D),MOD(RIGHTSHIFT)},
	[69]={SC(E),MOD(RIGHTSHIFT)},
	[70]={SC(F),MOD(RIGHTSHIFT)},
	[71]={SC(G),MOD(RIGHTSHIFT)},
	[72]={SC(H),MOD(RIGHTSHIFT)},
	[73]={SC(I),MOD(RIGHTSHIFT)},
	[74]={SC(J),MOD(RIGHTSHIFT)},
	[75]={SC(K),MOD(RIGHTSHIFT)},
	[76]={SC(L),MOD(RIGHTSHIFT)},
	[77]={SC(M),MOD(RIGHTSHIFT)},
	[78]={SC(N),MOD(RIGHTSHIFT)},
	[79]={SC(O),MOD(RIGHTSHIFT)},
	[80]={SC(P),MOD(RIGHTSHIFT)},
	[81]={SC(Q),MOD(RIGHTSHIFT)},
	[82]={SC(R),MOD(RIGHTSHIFT)},
	[83]={SC(S),MOD(RIGHTSHIFT)},
	[84]={SC(T),MOD(RIGHTSHIFT)},
	[85]={SC(U),MOD(RIGHTSHIFT)},
	[86]={SC(V),MOD(RIGHTSHIFT)},
	[87]={SC(W),MOD(RIGHTSHIFT)},
	[88]={SC(X),MOD(RIGHTSHIFT)},
	[89]={SC(Y),MOD(RIGHTSHIFT)},
	[90]={SC(Z),MOD(RIGHTSHIFT)},
	[91]={SC(OPENING_BRACKET_AND_OPENING_BRACE),MOD(RIGHTSHIFT)},
	[92]={SC(BACKSLASH_AND_PIPE),MOD(RIGHTSHIFT)},
	[93]={SC(CLOSING_BRACKET_AND_CLOSING_BRACE),MOD(RIGHTSHIFT)},
	[94]={SC(6_AND_CARET),MOD(RIGHTSHIFT)},
	[95]={SC(MINUS_AND_UNDERSCORE),MOD(RIGHTSHIFT)},
	[96]={SC(NON_US_HASHMARK_AND_TILDE),0},
	[97]={SC(A),0},
	[98]={SC(B),0},
	[99]={SC(C),0},
	[100]={SC(D),0},
	[101]={SC(E),0},
	[102]={SC(F),0},
	[103]={SC(G),0},
	[104]={SC(H),0},
	[105]={SC(I),0},
	[106]={SC(J),0},
	[107]={SC(K),0},
	[108]={SC(L),0},
	[109]={SC(M),0},
	[110]={SC(N),0},
	[111]={SC(O),0},
	[112]={SC(P),0},
	[113]={SC(Q),0},
	[114]={SC(R),0},
	[115]={SC(S),0},
	[116]={SC(T),0},
	[117]={SC(U),0},
	[118]={SC(V),0},
	[119]={SC(W),0},
	[120]={SC(X),0},
	[121]={SC(Y),0},
	[122]={SC(Z),0},
	[123]={SC(OPENING_BRACKET_AND_OPENING_BRACE),MOD(RIGHTSHIFT)},
	[124]={SC(BACKSLASH_AND_PIPE),MOD(RIGHTSHIFT)},
	[125]={SC(CLOSING_BRACKET_AND_CLOSING_BRACE),MOD(RIGHTSHIFT)},
	[126]={SC(NON_US_HASHMARK_AND_TILDE),MOD(RIGHTSHIFT)}
};

#endif /* LOOKUP_H_ */
